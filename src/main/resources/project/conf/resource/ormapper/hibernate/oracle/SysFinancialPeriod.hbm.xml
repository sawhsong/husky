<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - SYS_FINANCIAL_PERIOD - Quarter type by financial year
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.SysFinancialPeriod" table="SYS_FINANCIAL_PERIOD" lazy="false">
		<meta attribute="class-description" inherit="false">Quarter type by financial year</meta>

		<composite-id>
			<key-property name="periodYear" column="PERIOD_YEAR" type="java.lang.String" length="4"/>
			<key-property name="quarterCode" column="QUARTER_CODE" type="java.lang.String" length="30"/>
		</composite-id>

		<property name="dateFrom" column="DATE_FROM" not-null="true" type="java.util.Date"/>
		<property name="dateTo" column="DATE_TO" not-null="true" type="java.util.Date"/>
		<property name="quarterName" column="QUARTER_NAME" not-null="true" type="java.lang.String" length="30"/>
		<property name="financialYear" column="FINANCIAL_YEAR" type="java.lang.String" length="30"/>
		<property name="insertDate" column="INSERT_DATE" type="java.util.Date"/>
		<property name="insertUserId" column="INSERT_USER_ID" type="java.lang.String" length="30"/>
		<property name="updateDate" column="UPDATE_DATE" type="java.util.Date"/>
		<property name="updateUserId" column="UPDATE_USER_ID" type="java.lang.String" length="30"/>
	</class>

	<sql-query name="sysFinancialPeriod.selectAll">
	<![CDATA[
		SELECT PERIOD_YEAR,
		       QUARTER_CODE,
		       TO_CHAR(DATE_FROM, 'yyyymmddhh24miss') AS DATE_FROM,
		       TO_CHAR(DATE_TO, 'yyyymmddhh24miss') AS DATE_TO,
		       QUARTER_NAME,
		       FINANCIAL_YEAR,
		       TO_CHAR(INSERT_DATE, 'yyyymmddhh24miss') AS INSERT_DATE,
		       INSERT_USER_ID,
		       TO_CHAR(UPDATE_DATE, 'yyyymmddhh24miss') AS UPDATE_DATE,
		       UPDATE_USER_ID
		  FROM SYS_FINANCIAL_PERIOD
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
		 FOR UPDATE
	]]>
	</sql-query>

	<sql-query name="sysFinancialPeriod.insert">
	<![CDATA[
		INSERT INTO SYS_FINANCIAL_PERIOD (
		       PERIOD_YEAR,
		       QUARTER_CODE,
		       DATE_FROM,
		       DATE_TO,
		       QUARTER_NAME,
		       FINANCIAL_YEAR,
		       INSERT_DATE,
		       INSERT_USER_ID,
		       UPDATE_DATE,
		       UPDATE_USER_ID
		       )
		VALUES (
		       ${PERIOD_YEAR},
		       ${QUARTER_CODE},
		       ${DATE_FROM},
		       ${DATE_TO},
		       ${QUARTER_NAME},
		       ${FINANCIAL_YEAR},
		       ${INSERT_DATE},
		       ${INSERT_USER_ID},
		       ${UPDATE_DATE},
		       ${UPDATE_USER_ID}
		       )
	]]>
	</sql-query>

	<sql-query name="sysFinancialPeriod.update">
	<![CDATA[
		UPDATE SYS_FINANCIAL_PERIOD
		   SET DATE_FROM = ${DATE_FROM},
		       DATE_TO = ${DATE_TO},
		       QUARTER_NAME = ${QUARTER_NAME},
		       FINANCIAL_YEAR = ${FINANCIAL_YEAR},
		       INSERT_DATE = ${INSERT_DATE},
		       INSERT_USER_ID = ${INSERT_USER_ID},
		       UPDATE_DATE = ${UPDATE_DATE},
		       UPDATE_USER_ID = ${UPDATE_USER_ID}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="sysFinancialPeriod.updateColumns">
	<![CDATA[
		UPDATE SYS_FINANCIAL_PERIOD
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="sysFinancialPeriod.delete">
	<![CDATA[
		DELETE SYS_FINANCIAL_PERIOD
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>