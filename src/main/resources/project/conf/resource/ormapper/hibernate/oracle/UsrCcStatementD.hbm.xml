<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - USR_CC_STATEMENT_D - Credit card statement details
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.UsrCcStatementD" table="USR_CC_STATEMENT_D" lazy="false">
		<meta attribute="class-description" inherit="false">Credit card statement details</meta>

		<id name="ccStatementDId" column="CC_STATEMENT_D_ID" type="java.lang.String" length="30"></id>

		<property name="ccStatementId" column="CC_STATEMENT_ID" not-null="true" type="java.lang.String" length="30"/>
		<property name="procAmt" column="PROC_AMT" not-null="true" type="java.lang.Double"/>
		<property name="procDate" column="PROC_DATE" not-null="true" type="java.util.Date"/>
		<property name="rowIndex" column="ROW_INDEX" not-null="true" type="java.lang.Double"/>
		<property name="bankAccount" column="BANK_ACCOUNT" type="java.lang.String" length="30"/>
		<property name="category" column="CATEGORY" type="java.lang.String" length="50"/>
		<property name="creditAmt" column="CREDIT_AMT" type="java.lang.Double"/>
		<property name="debitAmt" column="DEBIT_AMT" type="java.lang.Double"/>
		<property name="insertDate" column="INSERT_DATE" type="java.util.Date"/>
		<property name="insertUserId" column="INSERT_USER_ID" type="java.lang.String" length="30"/>
		<property name="procDescription" column="PROC_DESCRIPTION" type="java.lang.String" length="1000"/>
		<property name="serial" column="SERIAL" type="java.lang.String" length="50"/>
		<property name="updateDate" column="UPDATE_DATE" type="java.util.Date"/>
		<property name="updateUserId" column="UPDATE_USER_ID" type="java.lang.String" length="30"/>
		<property name="userDescription" column="USER_DESCRIPTION" type="java.lang.String" length="500"/>
	</class>

	<sql-query name="usrCcStatementD.selectAll">
	<![CDATA[
		SELECT CC_STATEMENT_ID,
		       CC_STATEMENT_D_ID,
		       PROC_AMT,
		       TO_CHAR(PROC_DATE, 'yyyymmddhh24miss') AS PROC_DATE,
		       ROW_INDEX,
		       BANK_ACCOUNT,
		       CATEGORY,
		       CREDIT_AMT,
		       DEBIT_AMT,
		       TO_CHAR(INSERT_DATE, 'yyyymmddhh24miss') AS INSERT_DATE,
		       INSERT_USER_ID,
		       PROC_DESCRIPTION,
		       SERIAL,
		       TO_CHAR(UPDATE_DATE, 'yyyymmddhh24miss') AS UPDATE_DATE,
		       UPDATE_USER_ID,
		       USER_DESCRIPTION
		  FROM USR_CC_STATEMENT_D
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
		 FOR UPDATE
	]]>
	</sql-query>

	<sql-query name="usrCcStatementD.insert">
	<![CDATA[
		INSERT INTO USR_CC_STATEMENT_D (
		       CC_STATEMENT_ID,
		       CC_STATEMENT_D_ID,
		       PROC_AMT,
		       PROC_DATE,
		       ROW_INDEX,
		       BANK_ACCOUNT,
		       CATEGORY,
		       CREDIT_AMT,
		       DEBIT_AMT,
		       INSERT_DATE,
		       INSERT_USER_ID,
		       PROC_DESCRIPTION,
		       SERIAL,
		       UPDATE_DATE,
		       UPDATE_USER_ID,
		       USER_DESCRIPTION
		       )
		VALUES (
		       ${CC_STATEMENT_ID},
		       ${CC_STATEMENT_D_ID},
		       ${PROC_AMT},
		       ${PROC_DATE},
		       ${ROW_INDEX},
		       ${BANK_ACCOUNT},
		       ${CATEGORY},
		       ${CREDIT_AMT},
		       ${DEBIT_AMT},
		       ${INSERT_DATE},
		       ${INSERT_USER_ID},
		       ${PROC_DESCRIPTION},
		       ${SERIAL},
		       ${UPDATE_DATE},
		       ${UPDATE_USER_ID},
		       ${USER_DESCRIPTION}
		       )
	]]>
	</sql-query>

	<sql-query name="usrCcStatementD.update">
	<![CDATA[
		UPDATE USR_CC_STATEMENT_D
		   SET CC_STATEMENT_ID = ${CC_STATEMENT_ID},
		       PROC_AMT = ${PROC_AMT},
		       PROC_DATE = ${PROC_DATE},
		       ROW_INDEX = ${ROW_INDEX},
		       BANK_ACCOUNT = ${BANK_ACCOUNT},
		       CATEGORY = ${CATEGORY},
		       CREDIT_AMT = ${CREDIT_AMT},
		       DEBIT_AMT = ${DEBIT_AMT},
		       INSERT_DATE = ${INSERT_DATE},
		       INSERT_USER_ID = ${INSERT_USER_ID},
		       PROC_DESCRIPTION = ${PROC_DESCRIPTION},
		       SERIAL = ${SERIAL},
		       UPDATE_DATE = ${UPDATE_DATE},
		       UPDATE_USER_ID = ${UPDATE_USER_ID},
		       USER_DESCRIPTION = ${USER_DESCRIPTION}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="usrCcStatementD.updateColumns">
	<![CDATA[
		UPDATE USR_CC_STATEMENT_D
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="usrCcStatementD.delete">
	<![CDATA[
		DELETE USR_CC_STATEMENT_D
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>