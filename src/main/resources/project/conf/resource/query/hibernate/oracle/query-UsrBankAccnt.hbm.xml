<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Query hbm Source
 * - USR_BANK_ACCNT - Bank account info by user
 */-->
<hibernate-mapping>
	<sql-query name="query.UsrBankAccnt.getDataSetBySearchCriteria">
	<![CDATA[
		select uba.*,
		       (select count(*) from usr_bank_statement where bank_accnt_id = uba.bank_accnt_id) as bank_statement_cnt,
		       (select count(*) from usr_bs_tran_alloc where bank_accnt_id = uba.bank_accnt_id) as bs_tran_alloc_cnt,
		       (select description_${langCode} from sys_common_code where code_type = 'BANK_TYPE' and common_code = uba.bank_code) as bank_name
		  from usr_bank_accnt uba
		 where 1 = 1
		${auto_fill}
		${order_by_clause}
	]]>
	</sql-query>

	<sql-query name="query.UsrBankAccnt.getDataSetForSearchCriteriaByUserId">
	<![CDATA[
		select bank_accnt_id,
		       bank_code,
		       (select description_en from sys_common_code where code_type = 'BANK_TYPE' and common_code = bank_code)
		       ||' [BSB: '||
		       regexp_replace(bsb, '(.{3})(.{3})', '\1 \2')||' | '
		       ||'ACC: '||
		       accnt_number
		       ||']' as description
		  from usr_bank_accnt
		 where 1 = 1
		${auto_fill}
		${order_by_clause}
	]]>
	</sql-query>

	<sql-query name="query.UsrBankAccnt.getBankStatementAllocationStatusForDashboard">
	<![CDATA[
		select uba.bank_code,
		       (select description_${langCode} from sys_common_code where code_type = 'BANK_TYPE' and common_code = uba.bank_code) as bank_name,
		       uba.bsb,
		       uba.accnt_number,
		       uba.accnt_name,
		       uba.balance,
		       uba.accnt_name||' ['||(select description_${langCode} from sys_common_code where code_type = 'BANK_TYPE' and common_code = uba.bank_code)
		       ||' | '||'BSB : '||regexp_replace(uba.bsb, '(.{3})(.{3})', '\1 \2')||' | '||'ACC : '||uba.accnt_number||']' as description,
		       (select count(*) from usr_bank_statement where bank_accnt_id = uba.bank_accnt_id) as bs_cnt,
		       (select count(*) from usr_bs_tran_alloc where bank_accnt_id = uba.bank_accnt_id) as total_tran_cnt,
		       (select count(*) from usr_bs_tran_alloc where bank_accnt_id = uba.bank_accnt_id and status = 'AL') as allocated_tran_cnt,
		       (select count(*) from usr_bs_tran_alloc where bank_accnt_id = uba.bank_accnt_id and status = 'UP') as uploaded_tran_cnt
		  from usr_bank_accnt uba
		 where uba.user_id = '${userId}'
		 order by bank_name
	]]>
	</sql-query>
</hibernate-mapping>