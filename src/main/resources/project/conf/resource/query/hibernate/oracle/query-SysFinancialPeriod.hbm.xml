<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Query hbm Source
 * - SYS_FINANCIAL_PERIOD - Quarter type by financial year
 */-->
<hibernate-mapping>
	<sql-query name="query.SysFinancialPeriod.getDistinctFinancialYearDataSet">
	<![CDATA[
		select distinct period_year, financial_year
		  from sys_financial_period
		 order by period_year desc
	]]>
	</sql-query>

	<sql-query name="query.SysFinancialPeriod.getPeriodDataSetByCriteria">
	<![CDATA[
		select sfp.period_year,
		       sfp.quarter_code,
		       (select description_${langCode} from sys_common_code where code_type = 'QUARTER_CODE' and common_code = sfp.quarter_code) as quarter_code_name,
		       sfp.financial_year,
		       sfp.quarter_name,
		       (select description_${langCode} from sys_common_code where code_type = 'QUARTER_NAME' and common_code = sfp.quarter_name) as quarter_name_desc,
		       to_char(sfp.date_from, '${dateFormat}') as date_from,
		       to_char(sfp.date_to, '${dateFormat}') as date_to,
		       sfp.insert_user_id,
		       (select user_name from sys_user where user_id = sfp.insert_user_id) as insert_user_name,
		       sfp.update_user_id,
		       (select user_name from sys_user where user_id = sfp.update_user_id) as update_user_name,
		       to_char(sfp.insert_date, '${dateFormat}') as insert_date,
		       to_char(sfp.update_date, '${dateFormat}') as update_date,
		       nvl(update_date, insert_date) as last_updated_date
		  from sys_financial_period sfp
		 where 1 = 1
		${auto_fill}
		${order_by_clause}
	]]>
	</sql-query>

	<sql-query name="query.SysFinancialPeriod.getFinancialMonthsByPeriodYear">
	<![CDATA[
		 select period_year, financial_year,
		        to_char(add_months(date_from, (level - 1)), 'Mon-yy') as mon_char,
		        to_char(add_months(date_from, (level - 1)), 'mm-yy') as mon_num
		   from (select period_year,
		                financial_year,
		                min(date_from) as date_from,
		                max(date_to) as date_to
		           from sys_financial_period
		          where period_year = '${periodYear}'
		          group by period_year, financial_year
		        )
		connect by trunc(add_months(date_from, (level - 1))) <= trunc(date_to)
	]]>
	</sql-query>

	<sql-query name="query.SysFinancialPeriod.getStartEndDataSetByPeriodYear">
	<![CDATA[
		select period_year,
		       financial_year,
		       min(date_from) as date_from,
		       max(date_to) as date_to
		  from sys_financial_period
		 where period_year = '${periodYear}'
		 group by period_year, financial_year
	]]>
	</sql-query>
</hibernate-mapping>